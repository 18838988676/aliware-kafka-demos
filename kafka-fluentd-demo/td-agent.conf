####
## Output descriptions:
##

# Treasure Data (http://www.treasure-data.com/) provides cloud based data
# analytics platform, which easily stores and processes data from td-agent.
# FREE plan is also provided.
# @see http://docs.fluentd.org/articles/http-to-td
#
# This section matches events whose tag is td.DATABASE.TABLE
<match td.*.*>
  @type tdlog
  @id output_td
  apikey YOUR_API_KEY

  auto_create_table
  <buffer>
    @type file
    path /var/log/td-agent/buffer/td
  </buffer>

  <secondary>
    @type file
    path /var/log/td-agent/failed_records
  </secondary>
</match>

## match tag=debug.** and dump to console
<match debug.**>
  @type stdout
  @id output_stdout
</match>

####
## Source descriptions:
##

## built-in TCP input
## @see http://docs.fluentd.org/articles/in_forward
<source>
  @type forward
  @id input_forward
</source>

## built-in UNIX socket input
#<source>
#  type unix
#</source>

# HTTP input
# POST http://localhost:8888/<tag>?json=<json>
# POST http://localhost:8888/td.myapp.login?json={"user"%3A"me"}
# @see http://docs.fluentd.org/articles/in_http
<source>
  @type http
  @id input_http
  port 8888
</source>

## live debugging agent
<source>
  @type debug_agent
  @id input_debug_agent
  bind 127.0.0.1
  port 24230
</source>

####
## Examples:
##

## File input
## read apache logs continuously and tags td.apache.access
#<source>
#  @type tail
#  @id input_tail
#  <parse>
#    @type apache2
#  </parse>
#  path /var/log/httpd-access.log
#  tag td.apache.access
#</source>

## File output
## match tag=local.** and write to file
#<match local.**>
#  @type file
#  @id output_file
#  path /var/log/td-agent/access
#</match>

## Forwarding
## match tag=system.** and forward to another td-agent server
#<match system.**>
#  @type forward
#  @id output_system_forward
#
#  <server>
#    host 192.168.0.11
#  </server>
#  # secondary host is optional
#  <secondary>
#    <server>
#      host 192.168.0.12
#    </server>
#  </secondary>
#</match>

## Multiple output
## match tag=td.*.* and output to Treasure Data AND file
#<match td.*.*>
#  @type copy
#  @id output_copy
#  <store>
#    @type tdlog
#    apikey API_KEY
#    auto_create_table
#    <buffer>
#      @type file
#      path /var/log/td-agent/buffer/td
#    </buffer>
#  </store>
#  <store>
#    @type file
#    path /var/log/td-agent/td-%Y-%m-%d/%H.log
#  </store>
#</match>

## Kafka input
<source>
  @type kafka_group

  brokers XXX  # 接入地址从控制台实例信息中获得，如xxx1:9093,xxx2:9093,xxx3:9093
  
  topics  XXX  # Fluentd从Kafka的Topic消费, 如: FluentdInput
  format text
  message_key 
  add_prefix debug  # 消息的tag信息，这里配置debug tag可以将消费到的Kafka消息使用stdout输出到td-agent.log
  consumer_group XXX # Kafka上定义的消费组 

  # ruby-kafka consumer options
  #max_bytes     (integer) :default => nil (Use default of ruby-kafka)
  #max_wait_time (integer) :default => nil (Use default of ruby-kafka)
  #min_bytes     (integer) :default => nil (Use default of ruby-kafka)
  
  #注：以下三个参数只针对SASL_SSL方式访问需要配置，对于vpc内访问不需要如下三个参数
  ssl_ca_cert 'FULL-PATH-OF-alikafa-sasl.cert' # alikafa-sasl.cert文件的完整路径
  sasl_plain_username 'XXX'  # 从控制台获取实例的用户名
  sasl_plain_password 'XXX'  # 从控制台获取实例的密码
</source>

## Kafka output
<match kafka.**> # 将tag前缀为kafka的消息发送到指定的Kafka topic中
  @type kafka

  brokers    XXXX # 接入地址从控制台实例信息中获得，如xxx1:9093,xxx2:9093,xxx3:9093

  default_topic         XXX  # Fluentd将消息发送到Kafka的Topic, 如: FluentdOutput
  default_partition_key nil
  default_message_key   nil
  output_data_type      json
  output_include_tag    false
  output_include_time   false
  exclude_topic_key     false
  exclude_partition_key false

  # ruby-kafka producer options
  #max_send_retries    (integer)     :default => 1
  #required_acks       (integer)     :default => -1
  #ack_timeout         (integer)     :default => nil (Use default of ruby-kafka)
  #compression_codec   (gzip|snappy) :default => nil
  #max_buffer_size     (integer)     :default => nil (Use default of ruby-kafka)
  #max_buffer_bytesize (integer)     :default => nil (Use default of ruby-kafka)
  
  #注：以下三个参数只针对SASL_SSL方式访问需要配置，对于vpc内访问不需要如下三个参数
  ssl_ca_cert 'FULL-PATH-OF-alikafa-sasl.cert' # alikafa-sasl.cert文件的完整路径
  sasl_plain_username 'XXX'  # 从控制台获取实例的用户名
  sasl_plain_password 'XXX'  # 从控制台获取实例的密码
  
</match>  
